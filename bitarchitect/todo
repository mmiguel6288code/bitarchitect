Consistent documentation

Infinite repetition: {...}$
Counts:
	Count variable given as c<n>"<label>"
	(1) String length
		Extraction: Consume the amount specified in counter
		Construction: Set count based on size of value from data stream
		Notation:
			B..."<count_label>"*1+0; #have times or divide; have plus or minus
			C..."<count_label>"*1+0;

	(2) Sublist size
		Extraction: Repeatedly consume until sublist size meets count
		Construction: Set count based on size of sublist (bits)
		Notation:
			[<optional_leading_pattern>{<repeating_subpattern>}..."<count_label>"*1+0; <optional_trailing_pattern>]

	(3) Sublist count
		Extraction: Repeat until sublist len matches count
		Construction: Set count based on len of sublist
			[<repeating_single_value_pattern>..."<count_label>"*1+0; ]

String/Text parsing
	Grab a line and split by regex delimiter
	Grab a line and decode to unicode
	Grab until regex and split by regex delimiter

Turn off non-constructable exceptions
	Non-constructable extraction operations:
		Do markers and jumps without closing them
		Jump to an already parsed area
		Exit function without consuming entire set of bits
Turn off non-extracable exceptions
	Non-extractable construction operations:
		None?
	
